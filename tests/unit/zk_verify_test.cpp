#include "platon/crypto/bn256/zk/verify.hpp"

#include "platon/common.h"
#include "unit_test.hpp"
using namespace platon;
using namespace platon::crypto::bn256::zk;

TEST_CASE(zk, verify) {
  std::uint256_t a[2] = {
      "21095213886166619425589688913342591777706596917470202688668286194822875895192"_uint256,
      "12106160708321420765940766839488402301483934507324195931306775629952563836585"_uint256};
  std::uint256_t b[2][2] = {
      {"18077857524593830635945330701476777898239879776529526442063353712032031476111"_uint256,
       "1381243819157506299427355194129822586745492350337495678642046684258357888765"_uint256},
      {"3321507553698425073141927453978879632301065496350198341516473461166823280573"_uint256,
       "8547346122915106820127116708923971695774948381094146939720982523213162273951"_uint256}};
  std::uint256_t c[2] = {
      "15529669765270711453569777193742746282424089141252095256914648402088454801855"_uint256,
      "1336509450937084527160282932692703493678674402167657122753723654387346308156"_uint256};
  std::uint256_t input[2] = {
      "113569"_uint256,
      "1"_uint256};
  Verifier verifier;
  ASSERT(verifier.VerifyTx(a, b, c, input));
}

UNITTEST_MAIN() { RUN_TEST(zk, verify); }